{
    // 头部注释
    "fileheader.customMade": {
      // Author字段是文件的创建者 可以在specialOptions中更改特殊属性
      // 公司项目和个人项目可以配置不同的用户名与邮箱 搜索: gitconfig includeIf  比如: https://ayase.moe/2021/03/09/customized-git-config/
      // 自动提取当前git config中的: 用户名、邮箱
      "Author": "git config user.name && git config user.email", // 同时获取用户名与邮箱
      // "Author": "git config user.name", // 仅获取用户名
      // "Author": "git config user.email", // 仅获取邮箱
      // "Author": "OBKoro1", // 写死的固定值 不从git config中获取
      "Date": "Do not edit", // 文件创建时间(不变)
      // LastEditors、LastEditTime、FilePath将会自动更新 如果觉得时间更新的太频繁可以使用throttleTime(默认为1分钟)配置更改更新时间。
      "LastEditors": "git config user.name && git config user.email", // 文件最后编辑者 与Author字段一致
      // 由于编辑文件就会变更最后编辑时间，多人协作中合并的时候会导致merge
      // 可以将时间颗粒度改为周、或者月，这样冲突就减少很多。搜索变更时间格式: dateFormat
      "LastEditTime": "Do not edit", // 文件最后编辑时间
      // 输出相对路径，类似: /文件夹名称/src/index.js
      "FilePath": "Do not edit", // 文件在项目中的相对路径 自动更新
      // 插件会自动将光标移动到Description选项中 方便输入 Description字段可以在specialOptions更改
      "Description": "", // 介绍文件的作用、文件的入参、出参。
      // custom_string_obkoro1~custom_string_obkoro100都可以输出自定义信息
      // 可以设置多条自定义信息 设置个性签名、留下QQ、微信联系方式、输入空行等
      "custom_string_obkoro1": "",
      // 版权声明 保留文件所有权利 自动替换年份 获取git配置的用户名和邮箱
      // 版权声明获取git配置, 与Author字段一致: ${git_name} ${git_email} ${git_name_email}
      "custom_string_obkoro1_copyright": "Copyright (c) ${now_year} by ${git_name_email}, All Rights Reserved. "
      // "custom_string_obkoro1_copyright": "Copyright (c) ${now_year} by 写死的公司名/用户名, All Rights Reserved. "
    },
    // 函数注释
    "fileheader.cursorMode": {
      "description": "", // 函数注释生成之后，光标移动到这里
      "param": "", // param 开启函数参数自动提取 需要将光标放在函数行或者函数上方的空白行
      "return": ""
    },
    "workbench.colorTheme": "Mayukai Mono",
    "workbench.startupEditor": "none",
    "python.defaultInterpreterPath": "/Users/derek/.pyenv/versions/3.10.1/bin/python3",
    "editor.suggestSelection": "first",
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "editor.fontFamily": "Source Code Pro, Lilex, Monoid, Vivala Code, Hack, ProggyCrossed, ProggyVector, MonoLisa, 'M PLUS 1 Code', Input Mono, Bergen Mono, Comic Mono, Arkibal Mono, SF Mono, Operator Mono, IBM Plex Mono, JetBrains Mono, Cousine, Dank Mono, Fira Code, PragmataPro, Gintronic, Inconsolata LGC, Roboto Mono, Firge35Nerd, FirgeNerd",
    "editor.fontSize": 14,
    "editor.fontWeight": "400",
		"editor.lineHeight": 2.0,
    "editor.fontLigatures": false,
    "editor.multiCursorModifier": "ctrlCmd",
    "editor.snippetSuggestions": "top",
    "editor.renderControlCharacters": true,
    "editor.renderFinalNewline": true,
    "editor.renderWhitespace": "all",
    "vim.autoSwitchInputMethod.enable": true,
    "vim.autoSwitchInputMethod.defaultIM": "com.apple.keylayout.ABC",
    "vim.autoSwitchInputMethod.obtainIMCmd": "/usr/local/bin/im-select",
    "vim.autoSwitchInputMethod.switchIMCmd": "/usr/local/bin/im-select {im}",
    "terminal.integrated.fontFamily": "CaskaydiaCove Nerd Font Mono",
    "terminal.integrated.fontSize": 12,
    "terminal.integrated.fontWeight": "400",
    // 关闭vetur模板校验，使用ESLint + Prettier来实现
    "vetur.validation.template": false,
    // ESLint增加vue支持
    "eslint.validate": [
      "vue",
      "html",
      "javascript",
      "graphql",
      "javascriptreact",
      "json",
      "jsonc",
      "typescript",
      "typescriptreact"
    ],
    // 保存代码时自动修复
  
    "editor.formatOnSave": false, // 保存代码时自动格式化
    "editor.formatOnType": false, // 在键入一行后是否自动格式化
    "editor.formatOnPaste": false, // 在粘贴时自动格式化
    "editor.wordWrap": "off", // 换行规则， off永不换行
    "editor.detectIndentation": false, // vscode根据启用文件类型自动设置tabSize的值
    "editor.tabSize": 2,
    "editor.insertSpaces": false,
    // 保存时按照哪个规则进行格式化
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true
    },
    "files.exclude": {
      "**/.classpath": true,
      "**/.project": true,
      "**/.settings": true,
      "**/.factorypath": true
    },
    "files.autoSave": "onFocusChange",
    "java.configuration.runtimes": [
      {
        "name": "JavaSE-1.8",
        "path": "/Users/derek/.jenv/versions/1.8",
        "default": true
      }
    ],
    "java.jdt.ls.vmargs": "-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -javaagent:\"/Users/derek/.vscode-oss/extensions/gabrielbb.vscode-lombok-1.0.1/server/lombok.jar\"",
    "kite.showWelcomeNotificationOnStartup": false,
    "vetur.format.defaultFormatter.html": "prettyhtml",
    "vetur.format.defaultFormatter.css": "prettier",
    "vetur.format.defaultFormatter.postcss": "prettier",
    "vetur.format.defaultFormatter.scss": "prettier",
    "vetur.format.defaultFormatter.less": "prettier",
    "vetur.format.defaultFormatter.stylus": "stylus-supremacy",
    "vetur.format.defaultFormatter.js": "prettier",
    "vetur.format.defaultFormatter.ts": "prettier",
    "vetur.format.defaultFormatter.sass": "sass-formatter",
    "vetur.format.defaultFormatterOptions": {
      "prettier": {
        // Prettier option here
        "trailingComma": "es5", // 多行时尽可能打印尾随逗号
        "tabWith": 2, // 忽略vetur的tabSize设置
        "useTabs": false, // 是否利用tab替代空格
        "semi": false, // 句尾是否加分号
        "singleQuote": true, // 使用单引号而不是
        "arrowParens": "avoid" // allow paren-less arrow functions 箭头函数的参数使用圆括号
      }
    },
    "[vue]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[jsonc]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[json]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "prettier.endOfLine": "auto",
    "workbench.iconTheme": "simple-icons",
    "tabnine.experimentalAutoImports": true,
		"vscode-neovim.neovimExecutablePaths.darwin": "/opt/homebrew/bin/nvim",
		"sonarlint.ls.javaHome": "/opt/homebrew/Cellar/openjdk@11/11.0.16/libexec/openjdk.jdk/Contents/Home",
  }
  